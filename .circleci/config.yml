#
# WARNING: THIS IS A GENERATED FILE, DO NOT CHANGE IT DIRECTLY
#
version: 2

jobs:
  clone_and_hash:
    docker:
      - image: circleci/node:8
    working_directory: ~/monorepo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-project-metadata-{{ .Branch }}
            - v1-project-metadata-master

      - run:
          name: Initialize project metadata, hash them and determine changed ones
          command: |
            mkdir -p .project-metadata
          
            touch .api-hash
            git log --pretty=format:'%H' -n 1 -- api > .api-hash.new
            if ! diff .api-hash{,.new} > /dev/null; then
              touch .project-metadata/.api-changed
            fi
            mv .api-hash{.new,}
          
            touch .extension-hash
            git log --pretty=format:'%H' -n 1 -- api > .extension-hash.new
            if ! diff .extension-hash{,.new} > /dev/null; then
              touch .project-metadata/.extension-changed
            fi
            mv .extension-hash{.new,}
          
            touch .robinho-hash
            git log --pretty=format:'%H' -n 1 -- api > .robinho-hash.new
            if ! diff .robinho-hash{,.new} > /dev/null; then
              touch .project-metadata/.robinho-changed
            fi
            mv .robinho-hash{.new,}
          
            touch .site-hash
            git log --pretty=format:'%H' -n 1 -- api > .site-hash.new
            if ! diff .site-hash{,.new} > /dev/null; then
              touch .project-metadata/.site-changed
            fi
            mv .site-hash{.new,}
          
      - persist_to_workspace:
          root: .
          paths:
            - .project-metadata

      - save_cache:
          key: v1-project-metadata-{{ .Branch }}-{{ epoch }}
          paths:
          
            - .api-hash
          
            - .extension-hash
          
            - .robinho-hash
          
            - .site-hash
          


  api:
    working_directory: ~/monorepo/api
    docker:
      - image: docker
    steps:
      - checkout: { path: ~/monorepo }
      - attach_workspace: { at: . }
      - setup_remote_docker
      - run:
          name: check for changes
          command: |
            if [ ! -e ~/monorepo/.project-metadata/.api-changed ]; then
              echo "api has not changed, skipping build"
              circleci step halt
            fi
      - run:
          name: fetch existing image
          command: docker pull fakenewsdetector/api
      - run:
          name: build
          command: docker build --cache-from fakenewsdetector/api -t fakenewsdetector/api .
      - run:
          name: test
          command: docker run --rm fakenewsdetector/api cargo test
      - deploy:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $DOCKERHUB_PASS | docker login --username=$DOCKERHUB_USER --password-stdin
              docker push fakenewsdetector/api
  
              echo $HEROKU_KEY | docker login --username=_  --password-stdin registry.heroku.com
              docker tag fakenewsdetector/api registry.heroku.com/fake-news-detector-api/web
              docker push registry.heroku.com/fake-news-detector-api/web
            fi

  extension:
    working_directory: ~/monorepo/extension
    docker:
      - image: circleci/node:8
    steps:
      - checkout: { path: ~/monorepo }
      - attach_workspace: { at: . }
      - run:
          name: check for changes
          command: |
            if [ ! -e ~/monorepo/.project-metadata/.extension-changed ]; then
              echo "extension has not changed, skipping build"
              circleci step halt
            fi
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}-{{ checksum "elm-package.json" }}-{{ checksum "test/elm-package.json" }}
      - run:
          name: install-dependencies
          command: npm install
      - run:
          name: test
          command: npm test
      - run:
          name: build
          command: npm run build
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}-{{ checksum "elm-package.json" }}-{{ checksum "test/elm-package.json" }}
          paths:
            - node_modules
            - elm-stuff
            - test/elm-stuff
      - deploy:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run publish:chrome > publish.log 2>&1 && cat publish.log ||
              (cat publish.log && cat publish.log | grep PKG_INVALID_VERSION_NUMBER && echo "Same version, skipping the deploy to chrome")
  
              npm run publish:firefox > publish.log 2>&1 && cat publish.log ||
              (cat publish.log && cat publish.log | grep "Version already exists" && echo "Same version, skipping the deploy to firefox") ||
              (cat publish.log && cat publish.log | grep "Your add-on has been submitted for review" && echo "Deploy to firefox successfull")
            fi
  

  robinho:
    docker:
      - image: docker
    working_directory: ~/monorepo/robinho
    steps:
      - checkout: { path: ~/monorepo }
      - attach_workspace: { at: . }
      - setup_remote_docker
      - run:
          name: check for changes
          command: |
            if [ ! -e ~/monorepo/.project-metadata/.robinho-changed ]; then
              echo "robinho has not changed, skipping build"
              circleci step halt
            fi
      - run:
          name: fetch existing image
          command: docker pull fakenewsdetector/robinho
      - run:
          name: build
          command: docker build --build-arg CACHEBUST=$(date +%s) --cache-from fakenewsdetector/robinho -t fakenewsdetector/robinho .
      - run:
          name: run style check
          command: docker run --rm fakenewsdetector/robinho flake8 robinho/
      - run:
          name: run tests
          command: docker run --rm fakenewsdetector/robinho python3 -m unittest
      - deploy:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $DOCKERHUB_PASS | docker login --username=$DOCKERHUB_USER --password-stdin
              docker push fakenewsdetector/robinho
  
              echo $HEROKU_KEY | docker login --username=_  --password-stdin registry.heroku.com
              docker tag fakenewsdetector/robinho registry.heroku.com/robinho/web
              docker push registry.heroku.com/robinho/web
            fi

  site:
    working_directory: ~/monorepo/site
    docker:
      - image: circleci/node:8
    steps:
      - checkout: { path: ~/monorepo }
      - attach_workspace: { at: . }
      - run:
          name: check for changes
          command: |
            if [ ! -e ~/monorepo/.project-metadata/.site-changed ]; then
              echo "site has not changed, skipping build"
              circleci step halt
            fi
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}-{{ checksum "elm-package.json" }}-{{ checksum "test/elm-package.json" }}
      - run:
          name: install-dependencies
          command: npm install
      - run:
          name: test
          command: npm test
      - run:
          name: build
          command: npm run build
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}-{{ checksum "elm-package.json" }}-{{ checksum "test/elm-package.json" }}
          paths:
          - node_modules
          - elm-stuff
          - test/elm-stuff
      - deploy:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run deploy
            fi
  


workflows:
  version: 2

  build_test_deploy:
    jobs:
      - clone_and_hash
      
      - api:
          requires:
            - clone_and_hash
      
      - extension:
          requires:
            - clone_and_hash
      
      - robinho:
          requires:
            - clone_and_hash
      
      - site:
          requires:
            - clone_and_hash
      